services:
  postgres:
    image: postgres:latest
    container_name: postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 3s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./init.sh:/docker-entrypoint-initdb.d/init.sh
      - pg_data:/var/lib/postgres/data
    networks:
      - mynet      

  elasticsearch:
    image: elasticsearch:8.10.2
    container_name: elasticsearch
    healthcheck:
      test: ["CMD", "curl", "-XGET", "http://localhost:9200"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 60s
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - mynet

  app:
    container_name: portfolio
    build:
      context: /home/roque/03. Projects/portfolio
      dockerfile: ./docker/dockerfile
    ports:
      - "5000:5000"
    env_file:
      - .env   
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB} 
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy          
      elasticsearch:
        condition: service_healthy
    links:
      - elasticsearch:elasticsearch
      - postgres:postgres
    networks:
      - mynet    

networks:
  mynet:
    driver: bridge

volumes:
  pg_data:
  es_data:
    




